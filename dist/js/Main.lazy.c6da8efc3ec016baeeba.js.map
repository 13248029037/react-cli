{"version":3,"file":"js/Main.lazy.c6da8efc3ec016baeeba.js","sources":["webpack:///./src/container/channel/Main.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { createContext } from 'react'\r\nimport Child from './Child'\r\nimport Father from './Father'\r\nimport PropTypes from \"prop-types\";\r\nimport { Select } from 'antd';\r\nconst Option = Select.Option;\r\nconst { Provider, Consumer } = createContext()\r\n@inject('Channel')\r\n@observer\r\nexport default class Home extends Component {\r\n    static contextTypes = {\r\n        router: PropTypes.object.isRequired\r\n    }\r\n    static childContextTypes = {\r\n        name: PropTypes.string\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        console.info(props, 'fffffff')\r\n        // this.handleClick = this.handleClick.bind(this)\r\n        this.ss = {\r\n            age: 'xiao',\r\n            name: 'dddsfsf'\r\n        }\r\n        this.Dom = null\r\n    }\r\n    getChildContext() {\r\n        return {\r\n            name: 'xiaoshulin'\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.props.Channel.setFoundationData();\r\n    }\r\n    componentDidMount() {\r\n        console.info(this.Dom, 'DomDomDomDomDomDomDom')\r\n        this.Dom.eat();\r\n    }\r\n    handleClick(ee, rrr) {\r\n        console.info(this)\r\n        console.info(ee)\r\n        console.info(ee.target)\r\n        console.info(rrr)\r\n        // this.sing()\r\n        // this.props.history.push('/order_main')\r\n    }\r\n    sing() {\r\n        console.info(this)\r\n    }\r\n\r\n    render() {\r\n        const num = 0;\r\n        return (\r\n            <Provider value={this.ss}>\r\n                <div style={{ padding: '20px' }} >\r\n                    <Select\r\n                        style={{ width: 200 }}\r\n                        showSearch\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= num}\r\n                    >\r\n                        {\r\n                            this.props.Channel.getFoundationData.map(item =>\r\n                                <Option key={item.id} value={item.id}>{item.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                    <div style={{ backgroundColor: '#fff', marginTop: '20px' }} >\r\n                        {\r\n                            this.props.Channel.getFoundationData.map(item =>\r\n                                <span key={item.id} style={{ padding: '20px', margin: '10px' }}>{item.name}</span>)\r\n                        }\r\n                    </div>\r\n                    <div onClick={(event) => { this.handleClick(event, 55) }}>dian</div>\r\n                </div>\r\n                <Child>\r\n                    <Consumer>\r\n                        {(context) => (\r\n                            <div>\r\n                                <div>{context.name}</div>\r\n                                <div>{context.age}</div>\r\n                            </div>\r\n                        )}\r\n                    </Consumer>\r\n                </Child>\r\n                <Father ref={(Dom) => { this.Dom = Dom }}></Father>\r\n                <div>{this.props.Channel.getState}</div>\r\n                <span onClick={() => this.props.Channel.addStage()}>点击</span>\r\n            </Provider>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA","sourceRoot":""}